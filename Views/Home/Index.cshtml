@{
    ViewData["Title"] = "To-Do App";
}

<div class="container">
    <h1 class="text-center">To-Do App</h1>
    
    <!-- Task Input Form -->
    <div class="mb-3">
        <input type="text" id="taskInput" class="form-control" placeholder="Enter new task" />
        <button id="addTaskButton" class="btn btn-primary mt-3">Add Task</button>
    </div>

    <!-- Task List -->
    <h3>Tasks:</h3>
    <ul id="taskList" class="list-group">
        <!-- Tasks will be dynamically listed here -->
    </ul>
</div>

@section Scripts {
    <script>
        // API URL (Adjust to your Azure Functions URLs)
        const apiUrl = 'https://cloud-function-app-cba.azurewebsites.net/api/';

        // Add Task Function
        
        document.getElementById('addTaskButton').addEventListener('click', async function() {
            const taskInput = document.getElementById('taskInput').value.trim();

            if (taskInput) {
                const response = await fetch(apiUrl + 'addtask', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ task: taskInput })
                });

                if (response.ok) {
                    alert('Task added successfully!');
                    loadTasks(); // Reload tasks after adding
                } else {
                    alert('Failed to add task');
                }

                document.getElementById('taskInput').value = ''; // Clear the input field
            } else {
                alert('Please enter a task');
            }
        });

        // Remove Task Function
        async function removeTask(taskId) {
            const response = await fetch(apiUrl + 'removetask', {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ id: taskId })
            });

            if (response.ok) {
                alert('Task removed successfully!');
                loadTasks(); // Reload tasks after removing
            } else {
                alert('Failed to remove task');
            }
        }

        // Load Tasks
        async function loadTasks() {
            const response = await fetch(apiUrl + 'gettasks');
            const tasks = await response.json();

            const taskListElement = document.getElementById('taskList');
            taskListElement.innerHTML = ''; // Clear existing tasks

            if (Array.isArray(tasks)) {
                tasks.forEach(task => {
                    const listItem = document.createElement('li');
                    listItem.classList.add('list-group-item');
                    listItem.textContent = task;

                    const removeButton = document.createElement('button');
                    removeButton.classList.add('btn', 'btn-danger', 'btn-sm', 'float-right');
                    removeButton.textContent = 'Remove';
                    removeButton.onclick = () => removeTask(task);

                    listItem.appendChild(removeButton);
                    taskListElement.appendChild(listItem);
                });
            } else {
                taskListElement.innerHTML = '<li class="list-group-item">No tasks available</li>';
            }
        }

        // Load tasks when the page loads
        loadTasks();
    </script>
}
